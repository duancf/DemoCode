package day04;

/*
	通过Runnable接口实现多线程：
		1、实现类实现Runnable接口中run方法；
		2、main方法中调用Runnable实现类；
		3、通过new Thread(Runnable target).start()启动多线程；

		注：通过Runnable接口实现的多线程，相较于继承Thread实现多线程，Runnable接口适用于多线程共享资源、避免了由于单继承引起的局限性。

	线程的状态：
		1、创建状态：使用构造方法创建一个线程对象，新的线程就是新建状态，已经具备了相应的内存空间和资源，但还处于不可运行状态。
		2、就绪状态：调用start()方法，线程处于就绪状态，进入线程队等待CPU出理；
		3、运行状态：就绪状态下的线程被调用并获得处理器资源时，线程进入运行状态，同时自动调用run()方法。
		4、堵塞状态：因一些特殊情况(执行耗时的输入/输出)，让出CPU并暂时终止自己的执行，进入堵塞状态(sleep(), wait(), suspend())。引起堵塞的原因消除后，进入就绪状态。
		5、死亡状态: 调用stop()或run()方法执行完成后，进入死亡状态。

	java程序每次启动至少两个线程：1、main线程 2、垃圾收回线程。

	主线程有可能比其他线程先执行完。其他线程不会随着主线程的结束而结束。
*/
public class ThreadAndRunnable {

}
